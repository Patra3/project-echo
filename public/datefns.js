const daysInWeek=7,daysInYear=365.2425,millisecondsInWeek=6048e5,millisecondsInDay=864e5,millisecondsInMinute=6e4,millisecondsInHour=36e5,millisecondsInSecond=1e3,minutesInYear=525600,minutesInMonth=43200,minutesInDay=1440,minutesInHour=60,monthsInQuarter=3,monthsInYear=12,quartersInYear=4,secondsInHour=3600,secondsInMinute=60,secondsInDay=86400,secondsInWeek=604800,secondsInYear=31556952,secondsInMonth=2629746,secondsInQuarter=7889238,constructFromSymbol=Symbol.for("constructDateFrom");function constructFrom(e,t){return"function"==typeof e?e(t):e&&"object"==typeof e&&constructFromSymbol in e?e[constructFromSymbol](t):e instanceof Date?new e.constructor(t):new Date(t)}function toDate(e,t){return constructFrom(t||e,e)}function addDays(e,t,n){const r=toDate(e,n?.in);return isNaN(t)?constructFrom(n?.in||e,NaN):t?(r.setDate(r.getDate()+t),r):r}function addMonths(e,t,n){const r=toDate(e,n?.in);if(isNaN(t))return constructFrom(n?.in||e,NaN);if(!t)return r;const a=r.getDate(),s=constructFrom(n?.in||e,r.getTime());s.setMonth(r.getMonth()+t+1,0);return a>=s.getDate()?s:(r.setFullYear(s.getFullYear(),s.getMonth(),a),r)}function add(e,t,n){const{years:r=0,months:a=0,weeks:s=0,days:o=0,hours:i=0,minutes:u=0,seconds:c=0}=t,d=toDate(e,n?.in),l=a||r?addMonths(d,a+12*r):d,f=o||s?addDays(l,o+7*s):l,m=1e3*(c+60*(u+60*i));return constructFrom(n?.in||e,+f+m)}function isSaturday(e,t){return 6===toDate(e,t?.in).getDay()}function isSunday(e,t){return 0===toDate(e,t?.in).getDay()}function isWeekend(e,t){const n=toDate(e,t?.in).getDay();return 0===n||6===n}function addBusinessDays(e,t,n){const r=toDate(e,n?.in),a=isWeekend(r,n);if(isNaN(t))return constructFrom(n?.in,NaN);const s=r.getHours(),o=t<0?-1:1,i=Math.trunc(t/5);r.setDate(r.getDate()+7*i);let u=Math.abs(t%5);for(;u>0;)r.setDate(r.getDate()+o),isWeekend(r,n)||(u-=1);return a&&isWeekend(r,n)&&0!==t&&(isSaturday(r,n)&&r.setDate(r.getDate()+(o<0?2:-1)),isSunday(r,n)&&r.setDate(r.getDate()+(o<0?1:-2))),r.setHours(s),r}function addMilliseconds(e,t,n){return constructFrom(n?.in||e,+toDate(e)+t)}function addHours(e,t,n){return addMilliseconds(e,t*millisecondsInHour,n)}let defaultOptions={};function getDefaultOptions$1(){return defaultOptions}function setDefaultOptions$1(e){defaultOptions=e}function startOfWeek(e,t){const n=getDefaultOptions$1(),r=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,a=toDate(e,t?.in),s=a.getDay(),o=(s<r?7:0)+s-r;return a.setDate(a.getDate()-o),a.setHours(0,0,0,0),a}function startOfISOWeek(e,t){return startOfWeek(e,{...t,weekStartsOn:1})}function getISOWeekYear(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=constructFrom(n,0);a.setFullYear(r+1,0,4),a.setHours(0,0,0,0);const s=startOfISOWeek(a),o=constructFrom(n,0);o.setFullYear(r,0,4),o.setHours(0,0,0,0);const i=startOfISOWeek(o);return n.getTime()>=s.getTime()?r+1:n.getTime()>=i.getTime()?r:r-1}function getTimezoneOffsetInMilliseconds(e){const t=toDate(e),n=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return n.setUTCFullYear(t.getFullYear()),+e-+n}function normalizeDates(e,...t){const n=constructFrom.bind(null,e||t.find((e=>"object"==typeof e)));return t.map(n)}function startOfDay(e,t){const n=toDate(e,t?.in);return n.setHours(0,0,0,0),n}function differenceInCalendarDays(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=startOfDay(r),o=startOfDay(a),i=+s-getTimezoneOffsetInMilliseconds(s),u=+o-getTimezoneOffsetInMilliseconds(o);return Math.round((i-u)/millisecondsInDay)}function startOfISOWeekYear(e,t){const n=getISOWeekYear(e,t),r=constructFrom(t?.in||e,0);return r.setFullYear(n,0,4),r.setHours(0,0,0,0),startOfISOWeek(r)}function setISOWeekYear(e,t,n){let r=toDate(e,n?.in);const a=differenceInCalendarDays(r,startOfISOWeekYear(r,n)),s=constructFrom(n?.in||e,0);return s.setFullYear(t,0,4),s.setHours(0,0,0,0),r=startOfISOWeekYear(s),r.setDate(r.getDate()+a),r}function addISOWeekYears(e,t,n){return setISOWeekYear(e,getISOWeekYear(e,n)+t,n)}function addMinutes(e,t,n){const r=toDate(e,n?.in);return r.setTime(r.getTime()+t*millisecondsInMinute),r}function addQuarters(e,t,n){return addMonths(e,3*t,n)}function addSeconds(e,t,n){return addMilliseconds(e,1e3*t,n)}function addWeeks(e,t,n){return addDays(e,7*t,n)}function addYears(e,t,n){return addMonths(e,12*t,n)}function areIntervalsOverlapping(e,t,n){const[r,a]=[+toDate(e.start,n?.in),+toDate(e.end,n?.in)].sort(((e,t)=>e-t)),[s,o]=[+toDate(t.start,n?.in),+toDate(t.end,n?.in)].sort(((e,t)=>e-t));return n?.inclusive?r<=o&&s<=a:r<o&&s<a}function max(e,t){let n,r=t?.in;return e.forEach((e=>{r||"object"!=typeof e||(r=constructFrom.bind(null,e));const t=toDate(e,r);(!n||n<t||isNaN(+t))&&(n=t)})),constructFrom(r,n||NaN)}function min(e,t){let n,r=t?.in;return e.forEach((e=>{r||"object"!=typeof e||(r=constructFrom.bind(null,e));const t=toDate(e,r);(!n||n>t||isNaN(+t))&&(n=t)})),constructFrom(r,n||NaN)}function clamp(e,t,n){const[r,a,s]=normalizeDates(n?.in,e,t.start,t.end);return min([max([r,a],n),s],n)}function closestIndexTo(e,t){const n=+toDate(e);if(isNaN(n))return NaN;let r,a;return t.forEach(((e,t)=>{const s=toDate(e);if(isNaN(+s))return r=NaN,void(a=NaN);const o=Math.abs(n-+s);(null==r||o<a)&&(r=t,a=o)})),r}function closestTo(e,t,n){const[r,...a]=normalizeDates(n?.in,e,...t),s=closestIndexTo(r,a);return"number"==typeof s&&isNaN(s)?constructFrom(r,NaN):void 0!==s?a[s]:void 0}function compareAsc(e,t){const n=+toDate(e)-+toDate(t);return n<0?-1:n>0?1:n}function compareDesc(e,t){const n=+toDate(e)-+toDate(t);return n>0?-1:n<0?1:n}function constructNow(e){return constructFrom(e,Date.now())}function daysToWeeks(e){const t=Math.trunc(e/7);return 0===t?0:t}function isSameDay(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return+startOfDay(r)==+startOfDay(a)}function isDate(e){return e instanceof Date||"object"==typeof e&&"[object Date]"===Object.prototype.toString.call(e)}function isValid(e){return!(!isDate(e)&&"number"!=typeof e||isNaN(+toDate(e)))}function differenceInBusinessDays(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);if(!isValid(r)||!isValid(a))return NaN;const s=differenceInCalendarDays(r,a),o=s<0?-1:1,i=Math.trunc(s/7);let u=5*i,c=addDays(a,7*i);for(;!isSameDay(r,c);)u+=isWeekend(c,n)?0:o,c=addDays(c,o);return 0===u?0:u}function differenceInCalendarISOWeekYears(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return getISOWeekYear(r,n)-getISOWeekYear(a,n)}function differenceInCalendarISOWeeks(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=startOfISOWeek(r),o=startOfISOWeek(a),i=+s-getTimezoneOffsetInMilliseconds(s),u=+o-getTimezoneOffsetInMilliseconds(o);return Math.round((i-u)/millisecondsInWeek)}function differenceInCalendarMonths(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return 12*(r.getFullYear()-a.getFullYear())+(r.getMonth()-a.getMonth())}function getQuarter(e,t){const n=toDate(e,t?.in);return Math.trunc(n.getMonth()/3)+1}function differenceInCalendarQuarters(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return 4*(r.getFullYear()-a.getFullYear())+(getQuarter(r)-getQuarter(a))}function differenceInCalendarWeeks(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=startOfWeek(r,n),o=startOfWeek(a,n),i=+s-getTimezoneOffsetInMilliseconds(s),u=+o-getTimezoneOffsetInMilliseconds(o);return Math.round((i-u)/millisecondsInWeek)}function differenceInCalendarYears(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return r.getFullYear()-a.getFullYear()}function differenceInDays(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=compareLocalAsc(r,a),o=Math.abs(differenceInCalendarDays(r,a));r.setDate(r.getDate()-s*o);const i=s*(o-Number(compareLocalAsc(r,a)===-s));return 0===i?0:i}function compareLocalAsc(e,t){const n=e.getFullYear()-t.getFullYear()||e.getMonth()-t.getMonth()||e.getDate()-t.getDate()||e.getHours()-t.getHours()||e.getMinutes()-t.getMinutes()||e.getSeconds()-t.getSeconds()||e.getMilliseconds()-t.getMilliseconds();return n<0?-1:n>0?1:n}function getRoundingMethod(e){return t=>{const n=(e?Math[e]:Math.trunc)(t);return 0===n?0:n}}function differenceInHours(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=(+r-+a)/millisecondsInHour;return getRoundingMethod(n?.roundingMethod)(s)}function subISOWeekYears(e,t,n){return addISOWeekYears(e,-t,n)}function differenceInISOWeekYears(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=compareAsc(r,a),o=Math.abs(differenceInCalendarISOWeekYears(r,a,n)),i=subISOWeekYears(r,s*o,n),u=s*(o-Number(compareAsc(i,a)===-s));return 0===u?0:u}function differenceInMilliseconds(e,t){return+toDate(e)-+toDate(t)}function differenceInMinutes(e,t,n){const r=differenceInMilliseconds(e,t)/millisecondsInMinute;return getRoundingMethod(n?.roundingMethod)(r)}function endOfDay(e,t){const n=toDate(e,t?.in);return n.setHours(23,59,59,999),n}function endOfMonth(e,t){const n=toDate(e,t?.in),r=n.getMonth();return n.setFullYear(n.getFullYear(),r+1,0),n.setHours(23,59,59,999),n}function isLastDayOfMonth(e,t){const n=toDate(e,t?.in);return+endOfDay(n,t)==+endOfMonth(n,t)}function differenceInMonths(e,t,n){const[r,a,s]=normalizeDates(n?.in,e,e,t),o=compareAsc(a,s),i=Math.abs(differenceInCalendarMonths(a,s));if(i<1)return 0;1===a.getMonth()&&a.getDate()>27&&a.setDate(30),a.setMonth(a.getMonth()-o*i);let u=compareAsc(a,s)===-o;isLastDayOfMonth(r)&&1===i&&1===compareAsc(r,s)&&(u=!1);const c=o*(i-+u);return 0===c?0:c}function differenceInQuarters(e,t,n){const r=differenceInMonths(e,t,n)/3;return getRoundingMethod(n?.roundingMethod)(r)}function differenceInSeconds(e,t,n){const r=differenceInMilliseconds(e,t)/1e3;return getRoundingMethod(n?.roundingMethod)(r)}function differenceInWeeks(e,t,n){const r=differenceInDays(e,t,n)/7;return getRoundingMethod(n?.roundingMethod)(r)}function differenceInYears(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=compareAsc(r,a),o=Math.abs(differenceInCalendarYears(r,a));r.setFullYear(1584),a.setFullYear(1584);const i=s*(o-+(compareAsc(r,a)===-s));return 0===i?0:i}function normalizeInterval(e,t){const[n,r]=normalizeDates(e,t.start,t.end);return{start:n,end:r}}function eachDayOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=a?+n:+r,o=a?r:n;o.setHours(0,0,0,0);let i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o.setDate(o.getDate()+i),o.setHours(0,0,0,0);return a?u.reverse():u}function eachHourOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=a?+n:+r,o=a?r:n;o.setMinutes(0,0,0);let i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o.setHours(o.getHours()+i);return a?u.reverse():u}function eachMinuteOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);n.setSeconds(0,0);let a=+n>+r;const s=a?+n:+r;let o=a?r:n,i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o=addMinutes(o,i);return a?u.reverse():u}function eachMonthOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=a?+n:+r,o=a?r:n;o.setHours(0,0,0,0),o.setDate(1);let i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o.setMonth(o.getMonth()+i);return a?u.reverse():u}function startOfQuarter(e,t){const n=toDate(e,t?.in),r=n.getMonth(),a=r-r%3;return n.setMonth(a,1),n.setHours(0,0,0,0),n}function eachQuarterOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=a?+startOfQuarter(n):+startOfQuarter(r);let o=startOfQuarter(a?r:n),i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o=addQuarters(o,i);return a?u.reverse():u}function eachWeekOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=startOfWeek(a?r:n,t),o=startOfWeek(a?n:r,t);s.setHours(15),o.setHours(15);const i=+o.getTime();let u=s,c=t?.step??1;if(!c)return[];c<0&&(c=-c,a=!a);const d=[];for(;+u<=i;)u.setHours(0),d.push(constructFrom(n,u)),u=addWeeks(u,c),u.setHours(15);return a?d.reverse():d}function eachWeekendOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e),a=eachDayOfInterval({start:n,end:r},t),s=[];let o=0;for(;o<a.length;){const e=a[o++];isWeekend(e)&&s.push(constructFrom(n,e))}return s}function startOfMonth(e,t){const n=toDate(e,t?.in);return n.setDate(1),n.setHours(0,0,0,0),n}function eachWeekendOfMonth(e,t){return eachWeekendOfInterval({start:startOfMonth(e,t),end:endOfMonth(e,t)},t)}function endOfYear(e,t){const n=toDate(e,t?.in),r=n.getFullYear();return n.setFullYear(r+1,0,0),n.setHours(23,59,59,999),n}function startOfYear(e,t){const n=toDate(e,t?.in);return n.setFullYear(n.getFullYear(),0,1),n.setHours(0,0,0,0),n}function eachWeekendOfYear(e,t){return eachWeekendOfInterval({start:startOfYear(e,t),end:endOfYear(e,t)},t)}function eachYearOfInterval(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e);let a=+n>+r;const s=a?+n:+r,o=a?r:n;o.setHours(0,0,0,0),o.setMonth(0,1);let i=t?.step??1;if(!i)return[];i<0&&(i=-i,a=!a);const u=[];for(;+o<=s;)u.push(constructFrom(n,o)),o.setFullYear(o.getFullYear()+i);return a?u.reverse():u}function endOfDecade(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=9+10*Math.floor(r/10);return n.setFullYear(a,11,31),n.setHours(23,59,59,999),n}function endOfHour(e,t){const n=toDate(e,t?.in);return n.setMinutes(59,59,999),n}function endOfWeek(e,t){const n=getDefaultOptions$1(),r=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,a=toDate(e,t?.in),s=a.getDay(),o=6+(s<r?-7:0)-(s-r);return a.setDate(a.getDate()+o),a.setHours(23,59,59,999),a}function endOfISOWeek(e,t){return endOfWeek(e,{...t,weekStartsOn:1})}function endOfISOWeekYear(e,t){const n=getISOWeekYear(e,t),r=constructFrom(t?.in||e,0);r.setFullYear(n+1,0,4),r.setHours(0,0,0,0);const a=startOfISOWeek(r,t);return a.setMilliseconds(a.getMilliseconds()-1),a}function endOfMinute(e,t){const n=toDate(e,t?.in);return n.setSeconds(59,999),n}function endOfQuarter(e,t){const n=toDate(e,t?.in),r=n.getMonth(),a=r-r%3+3;return n.setMonth(a,0),n.setHours(23,59,59,999),n}function endOfSecond(e,t){const n=toDate(e,t?.in);return n.setMilliseconds(999),n}function endOfToday(e){return endOfDay(Date.now(),e)}function endOfTomorrow(e){const t=constructNow(e?.in),n=t.getFullYear(),r=t.getMonth(),a=t.getDate(),s=constructNow(e?.in);return s.setFullYear(n,r,a+1),s.setHours(23,59,59,999),e?.in?e.in(s):s}function endOfYesterday(e){const t=constructNow(e?.in),n=constructFrom(e?.in,0);return n.setFullYear(t.getFullYear(),t.getMonth(),t.getDate()-1),n.setHours(23,59,59,999),n}const formatDistanceLocale={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},formatDistance$1=(e,t,n)=>{let r;const a=formatDistanceLocale[e];return r="string"==typeof a?a:1===t?a.one:a.other.replace("{{count}}",t.toString()),n?.addSuffix?n.comparison&&n.comparison>0?"in "+r:r+" ago":r};function buildFormatLongFn(e){return(t={})=>{const n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}const dateFormats={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},timeFormats={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},dateTimeFormats={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},formatLong={date:buildFormatLongFn({formats:dateFormats,defaultWidth:"full"}),time:buildFormatLongFn({formats:timeFormats,defaultWidth:"full"}),dateTime:buildFormatLongFn({formats:dateTimeFormats,defaultWidth:"full"})},formatRelativeLocale={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},formatRelative$1=(e,t,n,r)=>formatRelativeLocale[e];function buildLocalizeFn(e){return(t,n)=>{let r;if("formatting"===(n?.context?String(n.context):"standalone")&&e.formattingValues){const t=e.defaultFormattingWidth||e.defaultWidth,a=n?.width?String(n.width):t;r=e.formattingValues[a]||e.formattingValues[t]}else{const t=e.defaultWidth,a=n?.width?String(n.width):e.defaultWidth;r=e.values[a]||e.values[t]}return r[e.argumentCallback?e.argumentCallback(t):t]}}const eraValues={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},quarterValues={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},monthValues={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},dayValues={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dayPeriodValues={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},formattingDayPeriodValues={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},ordinalNumber=(e,t)=>{const n=Number(e),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},localize={ordinalNumber:ordinalNumber,era:buildLocalizeFn({values:eraValues,defaultWidth:"wide"}),quarter:buildLocalizeFn({values:quarterValues,defaultWidth:"wide",argumentCallback:e=>e-1}),month:buildLocalizeFn({values:monthValues,defaultWidth:"wide"}),day:buildLocalizeFn({values:dayValues,defaultWidth:"wide"}),dayPeriod:buildLocalizeFn({values:dayPeriodValues,defaultWidth:"wide",formattingValues:formattingDayPeriodValues,defaultFormattingWidth:"wide"})};function buildMatchFn(e){return(t,n={})=>{const r=n.width,a=r&&e.matchPatterns[r]||e.matchPatterns[e.defaultMatchWidth],s=t.match(a);if(!s)return null;const o=s[0],i=r&&e.parsePatterns[r]||e.parsePatterns[e.defaultParseWidth],u=Array.isArray(i)?findIndex(i,(e=>e.test(o))):findKey(i,(e=>e.test(o)));let c;c=e.valueCallback?e.valueCallback(u):u,c=n.valueCallback?n.valueCallback(c):c;return{value:c,rest:t.slice(o.length)}}}function findKey(e,t){for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t(e[n]))return n}function findIndex(e,t){for(let n=0;n<e.length;n++)if(t(e[n]))return n}function buildMatchPatternFn(e){return(t,n={})=>{const r=t.match(e.matchPattern);if(!r)return null;const a=r[0],s=t.match(e.parsePattern);if(!s)return null;let o=e.valueCallback?e.valueCallback(s[0]):s[0];o=n.valueCallback?n.valueCallback(o):o;return{value:o,rest:t.slice(a.length)}}}const matchOrdinalNumberPattern=/^(\d+)(th|st|nd|rd)?/i,parseOrdinalNumberPattern=/\d+/i,matchEraPatterns={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},parseEraPatterns={any:[/^b/i,/^(a|c)/i]},matchQuarterPatterns={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},parseQuarterPatterns={any:[/1/i,/2/i,/3/i,/4/i]},matchMonthPatterns={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},parseMonthPatterns={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},matchDayPatterns={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},parseDayPatterns={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},matchDayPeriodPatterns={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},parseDayPeriodPatterns={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},match={ordinalNumber:buildMatchPatternFn({matchPattern:matchOrdinalNumberPattern,parsePattern:parseOrdinalNumberPattern,valueCallback:e=>parseInt(e,10)}),era:buildMatchFn({matchPatterns:matchEraPatterns,defaultMatchWidth:"wide",parsePatterns:parseEraPatterns,defaultParseWidth:"any"}),quarter:buildMatchFn({matchPatterns:matchQuarterPatterns,defaultMatchWidth:"wide",parsePatterns:parseQuarterPatterns,defaultParseWidth:"any",valueCallback:e=>e+1}),month:buildMatchFn({matchPatterns:matchMonthPatterns,defaultMatchWidth:"wide",parsePatterns:parseMonthPatterns,defaultParseWidth:"any"}),day:buildMatchFn({matchPatterns:matchDayPatterns,defaultMatchWidth:"wide",parsePatterns:parseDayPatterns,defaultParseWidth:"any"}),dayPeriod:buildMatchFn({matchPatterns:matchDayPeriodPatterns,defaultMatchWidth:"any",parsePatterns:parseDayPeriodPatterns,defaultParseWidth:"any"})},enUS={code:"en-US",formatDistance:formatDistance$1,formatLong:formatLong,formatRelative:formatRelative$1,localize:localize,match:match,options:{weekStartsOn:0,firstWeekContainsDate:1}};function getDayOfYear(e,t){const n=toDate(e,t?.in);return differenceInCalendarDays(n,startOfYear(n))+1}function getISOWeek(e,t){const n=toDate(e,t?.in),r=+startOfISOWeek(n)-+startOfISOWeekYear(n);return Math.round(r/millisecondsInWeek)+1}function getWeekYear(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=getDefaultOptions$1(),s=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??a.firstWeekContainsDate??a.locale?.options?.firstWeekContainsDate??1,o=constructFrom(t?.in||e,0);o.setFullYear(r+1,0,s),o.setHours(0,0,0,0);const i=startOfWeek(o,t),u=constructFrom(t?.in||e,0);u.setFullYear(r,0,s),u.setHours(0,0,0,0);const c=startOfWeek(u,t);return+n>=+i?r+1:+n>=+c?r:r-1}function startOfWeekYear(e,t){const n=getDefaultOptions$1(),r=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??n.firstWeekContainsDate??n.locale?.options?.firstWeekContainsDate??1,a=getWeekYear(e,t),s=constructFrom(t?.in||e,0);s.setFullYear(a,0,r),s.setHours(0,0,0,0);return startOfWeek(s,t)}function getWeek(e,t){const n=toDate(e,t?.in),r=+startOfWeek(n,t)-+startOfWeekYear(n,t);return Math.round(r/millisecondsInWeek)+1}function addLeadingZeros(e,t){return(e<0?"-":"")+Math.abs(e).toString().padStart(t,"0")}const lightFormatters={y(e,t){const n=e.getFullYear(),r=n>0?n:1-n;return addLeadingZeros("yy"===t?r%100:r,t.length)},M(e,t){const n=e.getMonth();return"M"===t?String(n+1):addLeadingZeros(n+1,2)},d:(e,t)=>addLeadingZeros(e.getDate(),t.length),a(e,t){const n=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.toUpperCase();case"aaa":return n;case"aaaaa":return n[0];default:return"am"===n?"a.m.":"p.m."}},h:(e,t)=>addLeadingZeros(e.getHours()%12||12,t.length),H:(e,t)=>addLeadingZeros(e.getHours(),t.length),m:(e,t)=>addLeadingZeros(e.getMinutes(),t.length),s:(e,t)=>addLeadingZeros(e.getSeconds(),t.length),S(e,t){const n=t.length,r=e.getMilliseconds();return addLeadingZeros(Math.trunc(r*Math.pow(10,n-3)),t.length)}},dayPeriodEnum={am:"am",pm:"pm",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},formatters={G:function(e,t,n){const r=e.getFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return n.era(r,{width:"abbreviated"});case"GGGGG":return n.era(r,{width:"narrow"});default:return n.era(r,{width:"wide"})}},y:function(e,t,n){if("yo"===t){const t=e.getFullYear(),r=t>0?t:1-t;return n.ordinalNumber(r,{unit:"year"})}return lightFormatters.y(e,t)},Y:function(e,t,n,r){const a=getWeekYear(e,r),s=a>0?a:1-a;if("YY"===t){return addLeadingZeros(s%100,2)}return"Yo"===t?n.ordinalNumber(s,{unit:"year"}):addLeadingZeros(s,t.length)},R:function(e,t){return addLeadingZeros(getISOWeekYear(e),t.length)},u:function(e,t){return addLeadingZeros(e.getFullYear(),t.length)},Q:function(e,t,n){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"Q":return String(r);case"QQ":return addLeadingZeros(r,2);case"Qo":return n.ordinalNumber(r,{unit:"quarter"});case"QQQ":return n.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return n.quarter(r,{width:"narrow",context:"formatting"});default:return n.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,t,n){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"q":return String(r);case"qq":return addLeadingZeros(r,2);case"qo":return n.ordinalNumber(r,{unit:"quarter"});case"qqq":return n.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return n.quarter(r,{width:"narrow",context:"standalone"});default:return n.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,t,n){const r=e.getMonth();switch(t){case"M":case"MM":return lightFormatters.M(e,t);case"Mo":return n.ordinalNumber(r+1,{unit:"month"});case"MMM":return n.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return n.month(r,{width:"narrow",context:"formatting"});default:return n.month(r,{width:"wide",context:"formatting"})}},L:function(e,t,n){const r=e.getMonth();switch(t){case"L":return String(r+1);case"LL":return addLeadingZeros(r+1,2);case"Lo":return n.ordinalNumber(r+1,{unit:"month"});case"LLL":return n.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return n.month(r,{width:"narrow",context:"standalone"});default:return n.month(r,{width:"wide",context:"standalone"})}},w:function(e,t,n,r){const a=getWeek(e,r);return"wo"===t?n.ordinalNumber(a,{unit:"week"}):addLeadingZeros(a,t.length)},I:function(e,t,n){const r=getISOWeek(e);return"Io"===t?n.ordinalNumber(r,{unit:"week"}):addLeadingZeros(r,t.length)},d:function(e,t,n){return"do"===t?n.ordinalNumber(e.getDate(),{unit:"date"}):lightFormatters.d(e,t)},D:function(e,t,n){const r=getDayOfYear(e);return"Do"===t?n.ordinalNumber(r,{unit:"dayOfYear"}):addLeadingZeros(r,t.length)},E:function(e,t,n){const r=e.getDay();switch(t){case"E":case"EE":case"EEE":return n.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return n.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},e:function(e,t,n,r){const a=e.getDay(),s=(a-r.weekStartsOn+8)%7||7;switch(t){case"e":return String(s);case"ee":return addLeadingZeros(s,2);case"eo":return n.ordinalNumber(s,{unit:"day"});case"eee":return n.day(a,{width:"abbreviated",context:"formatting"});case"eeeee":return n.day(a,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(a,{width:"short",context:"formatting"});default:return n.day(a,{width:"wide",context:"formatting"})}},c:function(e,t,n,r){const a=e.getDay(),s=(a-r.weekStartsOn+8)%7||7;switch(t){case"c":return String(s);case"cc":return addLeadingZeros(s,t.length);case"co":return n.ordinalNumber(s,{unit:"day"});case"ccc":return n.day(a,{width:"abbreviated",context:"standalone"});case"ccccc":return n.day(a,{width:"narrow",context:"standalone"});case"cccccc":return n.day(a,{width:"short",context:"standalone"});default:return n.day(a,{width:"wide",context:"standalone"})}},i:function(e,t,n){const r=e.getDay(),a=0===r?7:r;switch(t){case"i":return String(a);case"ii":return addLeadingZeros(a,t.length);case"io":return n.ordinalNumber(a,{unit:"day"});case"iii":return n.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return n.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},a:function(e,t,n){const r=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(e,t,n){const r=e.getHours();let a;switch(a=12===r?dayPeriodEnum.noon:0===r?dayPeriodEnum.midnight:r/12>=1?"pm":"am",t){case"b":case"bb":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"});case"bbb":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return n.dayPeriod(a,{width:"narrow",context:"formatting"});default:return n.dayPeriod(a,{width:"wide",context:"formatting"})}},B:function(e,t,n){const r=e.getHours();let a;switch(a=r>=17?dayPeriodEnum.evening:r>=12?dayPeriodEnum.afternoon:r>=4?dayPeriodEnum.morning:dayPeriodEnum.night,t){case"B":case"BB":case"BBB":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"});case"BBBBB":return n.dayPeriod(a,{width:"narrow",context:"formatting"});default:return n.dayPeriod(a,{width:"wide",context:"formatting"})}},h:function(e,t,n){if("ho"===t){let t=e.getHours()%12;return 0===t&&(t=12),n.ordinalNumber(t,{unit:"hour"})}return lightFormatters.h(e,t)},H:function(e,t,n){return"Ho"===t?n.ordinalNumber(e.getHours(),{unit:"hour"}):lightFormatters.H(e,t)},K:function(e,t,n){const r=e.getHours()%12;return"Ko"===t?n.ordinalNumber(r,{unit:"hour"}):addLeadingZeros(r,t.length)},k:function(e,t,n){let r=e.getHours();return 0===r&&(r=24),"ko"===t?n.ordinalNumber(r,{unit:"hour"}):addLeadingZeros(r,t.length)},m:function(e,t,n){return"mo"===t?n.ordinalNumber(e.getMinutes(),{unit:"minute"}):lightFormatters.m(e,t)},s:function(e,t,n){return"so"===t?n.ordinalNumber(e.getSeconds(),{unit:"second"}):lightFormatters.s(e,t)},S:function(e,t){return lightFormatters.S(e,t)},X:function(e,t,n){const r=e.getTimezoneOffset();if(0===r)return"Z";switch(t){case"X":return formatTimezoneWithOptionalMinutes(r);case"XXXX":case"XX":return formatTimezone(r);default:return formatTimezone(r,":")}},x:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"x":return formatTimezoneWithOptionalMinutes(r);case"xxxx":case"xx":return formatTimezone(r);default:return formatTimezone(r,":")}},O:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+formatTimezoneShort(r,":");default:return"GMT"+formatTimezone(r,":")}},z:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+formatTimezoneShort(r,":");default:return"GMT"+formatTimezone(r,":")}},t:function(e,t,n){return addLeadingZeros(Math.trunc(+e/1e3),t.length)},T:function(e,t,n){return addLeadingZeros(+e,t.length)}};function formatTimezoneShort(e,t=""){const n=e>0?"-":"+",r=Math.abs(e),a=Math.trunc(r/60),s=r%60;return 0===s?n+String(a):n+String(a)+t+addLeadingZeros(s,2)}function formatTimezoneWithOptionalMinutes(e,t){if(e%60==0){return(e>0?"-":"+")+addLeadingZeros(Math.abs(e)/60,2)}return formatTimezone(e,t)}function formatTimezone(e,t=""){const n=e>0?"-":"+",r=Math.abs(e);return n+addLeadingZeros(Math.trunc(r/60),2)+t+addLeadingZeros(r%60,2)}const dateLongFormatter=(e,t)=>{switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},timeLongFormatter=(e,t)=>{switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}},dateTimeLongFormatter=(e,t)=>{const n=e.match(/(P+)(p+)?/)||[],r=n[1],a=n[2];if(!a)return dateLongFormatter(e,t);let s;switch(r){case"P":s=t.dateTime({width:"short"});break;case"PP":s=t.dateTime({width:"medium"});break;case"PPP":s=t.dateTime({width:"long"});break;default:s=t.dateTime({width:"full"})}return s.replace("{{date}}",dateLongFormatter(r,t)).replace("{{time}}",timeLongFormatter(a,t))},longFormatters={p:timeLongFormatter,P:dateTimeLongFormatter},dayOfYearTokenRE=/^D+$/,weekYearTokenRE=/^Y+$/,throwTokens=["D","DD","YY","YYYY"];function isProtectedDayOfYearToken(e){return dayOfYearTokenRE.test(e)}function isProtectedWeekYearToken(e){return weekYearTokenRE.test(e)}function warnOrThrowProtectedError(e,t,n){const r=message(e,t,n);if(console.warn(r),throwTokens.includes(e))throw new RangeError(r)}function message(e,t,n){const r="Y"===e[0]?"years":"days of the month";return`Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}const formattingTokensRegExp$2=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,longFormattingTokensRegExp$1=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,escapedStringRegExp$2=/^'([^]*?)'?$/,doubleQuoteRegExp$2=/''/g,unescapedLatinCharacterRegExp$2=/[a-zA-Z]/;function format(e,t,n){const r=getDefaultOptions$1(),a=n?.locale??r.locale??enUS,s=n?.firstWeekContainsDate??n?.locale?.options?.firstWeekContainsDate??r.firstWeekContainsDate??r.locale?.options?.firstWeekContainsDate??1,o=n?.weekStartsOn??n?.locale?.options?.weekStartsOn??r.weekStartsOn??r.locale?.options?.weekStartsOn??0,i=toDate(e,n?.in);if(!isValid(i))throw new RangeError("Invalid time value");let u=t.match(longFormattingTokensRegExp$1).map((e=>{const t=e[0];if("p"===t||"P"===t){return(0,longFormatters[t])(e,a.formatLong)}return e})).join("").match(formattingTokensRegExp$2).map((e=>{if("''"===e)return{isToken:!1,value:"'"};const t=e[0];if("'"===t)return{isToken:!1,value:cleanEscapedString$2(e)};if(formatters[t])return{isToken:!0,value:e};if(t.match(unescapedLatinCharacterRegExp$2))throw new RangeError("Format string contains an unescaped latin alphabet character `"+t+"`");return{isToken:!1,value:e}}));a.localize.preprocessor&&(u=a.localize.preprocessor(i,u));const c={firstWeekContainsDate:s,weekStartsOn:o,locale:a};return u.map((r=>{if(!r.isToken)return r.value;const s=r.value;(!n?.useAdditionalWeekYearTokens&&isProtectedWeekYearToken(s)||!n?.useAdditionalDayOfYearTokens&&isProtectedDayOfYearToken(s))&&warnOrThrowProtectedError(s,t,String(e));return(0,formatters[s[0]])(i,s,a.localize,c)})).join("")}function cleanEscapedString$2(e){const t=e.match(escapedStringRegExp$2);return t?t[1].replace(doubleQuoteRegExp$2,"'"):e}function formatDistance(e,t,n){const r=getDefaultOptions$1(),a=n?.locale??r.locale??enUS,s=compareAsc(e,t);if(isNaN(s))throw new RangeError("Invalid time value");const o=Object.assign({},n,{addSuffix:n?.addSuffix,comparison:s}),[i,u]=normalizeDates(n?.in,...s>0?[t,e]:[e,t]),c=differenceInSeconds(u,i),d=(getTimezoneOffsetInMilliseconds(u)-getTimezoneOffsetInMilliseconds(i))/1e3,l=Math.round((c-d)/60);let f;if(l<2)return n?.includeSeconds?c<5?a.formatDistance("lessThanXSeconds",5,o):c<10?a.formatDistance("lessThanXSeconds",10,o):c<20?a.formatDistance("lessThanXSeconds",20,o):c<40?a.formatDistance("halfAMinute",0,o):c<60?a.formatDistance("lessThanXMinutes",1,o):a.formatDistance("xMinutes",1,o):0===l?a.formatDistance("lessThanXMinutes",1,o):a.formatDistance("xMinutes",l,o);if(l<45)return a.formatDistance("xMinutes",l,o);if(l<90)return a.formatDistance("aboutXHours",1,o);if(l<minutesInDay){const e=Math.round(l/60);return a.formatDistance("aboutXHours",e,o)}if(l<2520)return a.formatDistance("xDays",1,o);if(l<minutesInMonth){const e=Math.round(l/minutesInDay);return a.formatDistance("xDays",e,o)}if(l<2*minutesInMonth)return f=Math.round(l/minutesInMonth),a.formatDistance("aboutXMonths",f,o);if(f=differenceInMonths(u,i),f<12){const e=Math.round(l/minutesInMonth);return a.formatDistance("xMonths",e,o)}{const e=f%12,t=Math.trunc(f/12);return e<3?a.formatDistance("aboutXYears",t,o):e<9?a.formatDistance("overXYears",t,o):a.formatDistance("almostXYears",t+1,o)}}function formatDistanceStrict(e,t,n){const r=getDefaultOptions$1(),a=n?.locale??r.locale??enUS,s=compareAsc(e,t);if(isNaN(s))throw new RangeError("Invalid time value");const o=Object.assign({},n,{addSuffix:n?.addSuffix,comparison:s}),[i,u]=normalizeDates(n?.in,...s>0?[t,e]:[e,t]),c=getRoundingMethod(n?.roundingMethod??"round"),d=u.getTime()-i.getTime(),l=d/millisecondsInMinute,f=(d-(getTimezoneOffsetInMilliseconds(u)-getTimezoneOffsetInMilliseconds(i)))/millisecondsInMinute,m=n?.unit;let h;if(h=m||(l<1?"second":l<60?"minute":l<minutesInDay?"hour":f<minutesInMonth?"day":f<minutesInYear?"month":"year"),"second"===h){const e=c(d/1e3);return a.formatDistance("xSeconds",e,o)}if("minute"===h){const e=c(l);return a.formatDistance("xMinutes",e,o)}if("hour"===h){const e=c(l/60);return a.formatDistance("xHours",e,o)}if("day"===h){const e=c(f/minutesInDay);return a.formatDistance("xDays",e,o)}if("month"===h){const e=c(f/minutesInMonth);return 12===e&&"month"!==m?a.formatDistance("xYears",1,o):a.formatDistance("xMonths",e,o)}{const e=c(f/minutesInYear);return a.formatDistance("xYears",e,o)}}function formatDistanceToNow(e,t){return formatDistance(e,constructNow(e),t)}function formatDistanceToNowStrict(e,t){return formatDistanceStrict(e,constructNow(e),t)}const defaultFormat=["years","months","weeks","days","hours","minutes","seconds"];function formatDuration(e,t){const n=getDefaultOptions$1(),r=t?.locale??n.locale??enUS,a=t?.format??defaultFormat,s=t?.zero??!1,o=t?.delimiter??" ";if(!r.formatDistance)return"";return a.reduce(((t,n)=>{const a=`x${n.replace(/(^.)/,(e=>e.toUpperCase()))}`,o=e[n];return void 0!==o&&(s||e[n])?t.concat(r.formatDistance(a,o)):t}),[]).join(o)}function formatISO(e,t){const n=toDate(e,t?.in);if(isNaN(+n))throw new RangeError("Invalid time value");const r=t?.format??"extended",a=t?.representation??"complete";let s="",o="";const i="extended"===r?"-":"",u="extended"===r?":":"";if("time"!==a){const e=addLeadingZeros(n.getDate(),2),t=addLeadingZeros(n.getMonth()+1,2);s=`${addLeadingZeros(n.getFullYear(),4)}${i}${t}${i}${e}`}if("date"!==a){const e=n.getTimezoneOffset();if(0!==e){const t=Math.abs(e);o=`${e<0?"+":"-"}${addLeadingZeros(Math.trunc(t/60),2)}:${addLeadingZeros(t%60,2)}`}else o="Z";s=`${s}${""===s?"":"T"}${[addLeadingZeros(n.getHours(),2),addLeadingZeros(n.getMinutes(),2),addLeadingZeros(n.getSeconds(),2)].join(u)}${o}`}return s}function formatISO9075(e,t){const n=toDate(e,t?.in);if(!isValid(n))throw new RangeError("Invalid time value");const r=t?.format??"extended",a=t?.representation??"complete";let s="";const o="extended"===r?"-":"",i="extended"===r?":":"";if("time"!==a){const e=addLeadingZeros(n.getDate(),2),t=addLeadingZeros(n.getMonth()+1,2);s=`${addLeadingZeros(n.getFullYear(),4)}${o}${t}${o}${e}`}if("date"!==a){s=`${s}${""===s?"":" "}${addLeadingZeros(n.getHours(),2)}${i}${addLeadingZeros(n.getMinutes(),2)}${i}${addLeadingZeros(n.getSeconds(),2)}`}return s}function formatISODuration(e){const{years:t=0,months:n=0,days:r=0,hours:a=0,minutes:s=0,seconds:o=0}=e;return`P${t}Y${n}M${r}DT${a}H${s}M${o}S`}function formatRFC3339(e,t){const n=toDate(e,t?.in);if(!isValid(n))throw new RangeError("Invalid time value");const r=t?.fractionDigits??0,a=addLeadingZeros(n.getDate(),2),s=addLeadingZeros(n.getMonth()+1,2),o=n.getFullYear(),i=addLeadingZeros(n.getHours(),2),u=addLeadingZeros(n.getMinutes(),2),c=addLeadingZeros(n.getSeconds(),2);let d="";if(r>0){const e=n.getMilliseconds();d="."+addLeadingZeros(Math.trunc(e*Math.pow(10,r-3)),r)}let l="";const f=n.getTimezoneOffset();if(0!==f){const e=Math.abs(f);l=`${f<0?"+":"-"}${addLeadingZeros(Math.trunc(e/60),2)}:${addLeadingZeros(e%60,2)}`}else l="Z";return`${o}-${s}-${a}T${i}:${u}:${c}${d}${l}`}const days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function formatRFC7231(e){const t=toDate(e);if(!isValid(t))throw new RangeError("Invalid time value");return`${days[t.getUTCDay()]}, ${addLeadingZeros(t.getUTCDate(),2)} ${months[t.getUTCMonth()]} ${t.getUTCFullYear()} ${addLeadingZeros(t.getUTCHours(),2)}:${addLeadingZeros(t.getUTCMinutes(),2)}:${addLeadingZeros(t.getUTCSeconds(),2)} GMT`}function formatRelative(e,t,n){const[r,a]=normalizeDates(n?.in,e,t),s=getDefaultOptions$1(),o=n?.locale??s.locale??enUS,i=n?.weekStartsOn??n?.locale?.options?.weekStartsOn??s.weekStartsOn??s.locale?.options?.weekStartsOn??0,u=differenceInCalendarDays(r,a);if(isNaN(u))throw new RangeError("Invalid time value");let c;c=u<-6?"other":u<-1?"lastWeek":u<0?"yesterday":u<1?"today":u<2?"tomorrow":u<7?"nextWeek":"other";return format(r,o.formatRelative(c,r,a,{locale:o,weekStartsOn:i}),{locale:o,weekStartsOn:i})}function fromUnixTime(e,t){return toDate(1e3*e,t?.in)}function getDate(e,t){return toDate(e,t?.in).getDate()}function getDay(e,t){return toDate(e,t?.in).getDay()}function getDaysInMonth(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=n.getMonth(),s=constructFrom(n,0);return s.setFullYear(r,a+1,0),s.setHours(0,0,0,0),s.getDate()}function isLeapYear(e,t){const n=toDate(e,t?.in).getFullYear();return n%400==0||n%4==0&&n%100!=0}function getDaysInYear(e,t){const n=toDate(e,t?.in);return Number.isNaN(+n)?NaN:isLeapYear(n)?366:365}function getDecade(e,t){const n=toDate(e,t?.in).getFullYear();return 10*Math.floor(n/10)}function getDefaultOptions(){return Object.assign({},getDefaultOptions$1())}function getHours(e,t){return toDate(e,t?.in).getHours()}function getISODay(e,t){const n=toDate(e,t?.in).getDay();return 0===n?7:n}function getISOWeeksInYear(e,t){const n=startOfISOWeekYear(e,t),r=+startOfISOWeekYear(addWeeks(n,60))-+n;return Math.round(r/millisecondsInWeek)}function getMilliseconds(e){return toDate(e).getMilliseconds()}function getMinutes(e,t){return toDate(e,t?.in).getMinutes()}function getMonth(e,t){return toDate(e,t?.in).getMonth()}function getOverlappingDaysInIntervals(e,t){const[n,r]=[+toDate(e.start),+toDate(e.end)].sort(((e,t)=>e-t)),[a,s]=[+toDate(t.start),+toDate(t.end)].sort(((e,t)=>e-t));if(!(n<s&&a<r))return 0;const o=a<n?n:a,i=o-getTimezoneOffsetInMilliseconds(o),u=s>r?r:s,c=u-getTimezoneOffsetInMilliseconds(u);return Math.ceil((c-i)/millisecondsInDay)}function getSeconds(e){return toDate(e).getSeconds()}function getTime(e){return+toDate(e)}function getUnixTime(e){return Math.trunc(+toDate(e)/1e3)}function getWeekOfMonth(e,t){const n=getDefaultOptions$1(),r=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,a=getDate(toDate(e,t?.in));if(isNaN(a))return NaN;let s=r-getDay(startOfMonth(e,t));s<=0&&(s+=7);const o=a-s;return Math.ceil(o/7)+1}function lastDayOfMonth(e,t){const n=toDate(e,t?.in),r=n.getMonth();return n.setFullYear(n.getFullYear(),r+1,0),n.setHours(0,0,0,0),toDate(n,t?.in)}function getWeeksInMonth(e,t){const n=toDate(e,t?.in);return differenceInCalendarWeeks(lastDayOfMonth(n,t),startOfMonth(n,t),t)+1}function getYear(e,t){return toDate(e,t?.in).getFullYear()}function hoursToMilliseconds(e){return Math.trunc(e*millisecondsInHour)}function hoursToMinutes(e){return Math.trunc(60*e)}function hoursToSeconds(e){return Math.trunc(3600*e)}function interval(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);if(isNaN(+r))throw new TypeError("Start date is invalid");if(isNaN(+a))throw new TypeError("End date is invalid");if(n?.assertPositive&&+r>+a)throw new TypeError("End date must be after start date");return{start:r,end:a}}function intervalToDuration(e,t){const{start:n,end:r}=normalizeInterval(t?.in,e),a={},s=differenceInYears(r,n);s&&(a.years=s);const o=add(n,{years:a.years}),i=differenceInMonths(r,o);i&&(a.months=i);const u=add(o,{months:a.months}),c=differenceInDays(r,u);c&&(a.days=c);const d=add(u,{days:a.days}),l=differenceInHours(r,d);l&&(a.hours=l);const f=add(d,{hours:a.hours}),m=differenceInMinutes(r,f);m&&(a.minutes=m);const h=differenceInSeconds(r,add(f,{minutes:a.minutes}));return h&&(a.seconds=h),a}function intlFormat(e,t,n){let r;return isFormatOptions(t)?r=t:n=t,new Intl.DateTimeFormat(n?.locale,r).format(toDate(e))}function isFormatOptions(e){return void 0!==e&&!("locale"in e)}function intlFormatDistance(e,t,n){let r,a=0;const[s,o]=normalizeDates(n?.in,e,t);if(n?.unit)r=n?.unit,"second"===r?a=differenceInSeconds(s,o):"minute"===r?a=differenceInMinutes(s,o):"hour"===r?a=differenceInHours(s,o):"day"===r?a=differenceInCalendarDays(s,o):"week"===r?a=differenceInCalendarWeeks(s,o):"month"===r?a=differenceInCalendarMonths(s,o):"quarter"===r?a=differenceInCalendarQuarters(s,o):"year"===r&&(a=differenceInCalendarYears(s,o));else{const e=differenceInSeconds(s,o);Math.abs(e)<60?(a=differenceInSeconds(s,o),r="second"):Math.abs(e)<3600?(a=differenceInMinutes(s,o),r="minute"):Math.abs(e)<86400&&Math.abs(differenceInCalendarDays(s,o))<1?(a=differenceInHours(s,o),r="hour"):Math.abs(e)<604800&&(a=differenceInCalendarDays(s,o))&&Math.abs(a)<7?r="day":Math.abs(e)<2629746?(a=differenceInCalendarWeeks(s,o),r="week"):Math.abs(e)<7889238?(a=differenceInCalendarMonths(s,o),r="month"):Math.abs(e)<31556952&&differenceInCalendarQuarters(s,o)<4?(a=differenceInCalendarQuarters(s,o),r="quarter"):(a=differenceInCalendarYears(s,o),r="year")}return new Intl.RelativeTimeFormat(n?.locale,{numeric:"auto",...n}).format(a,r)}function isAfter(e,t){return+toDate(e)>+toDate(t)}function isBefore(e,t){return+toDate(e)<+toDate(t)}function isEqual(e,t){return+toDate(e)==+toDate(t)}function isExists(e,t,n){const r=new Date(e,t,n);return r.getFullYear()===e&&r.getMonth()===t&&r.getDate()===n}function isFirstDayOfMonth(e,t){return 1===toDate(e,t?.in).getDate()}function isFriday(e,t){return 5===toDate(e,t?.in).getDay()}function isFuture(e){return+toDate(e)>Date.now()}function transpose(e,t){const n=isConstructor(t)?new t(0):constructFrom(t,0);return n.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),n.setHours(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()),n}function isConstructor(e){return"function"==typeof e&&e.prototype?.constructor===e}const TIMEZONE_UNIT_PRIORITY=10;class Setter{subPriority=0;validate(e,t){return!0}}class ValueSetter extends Setter{constructor(e,t,n,r,a){super(),this.value=e,this.validateValue=t,this.setValue=n,this.priority=r,a&&(this.subPriority=a)}validate(e,t){return this.validateValue(e,this.value,t)}set(e,t,n){return this.setValue(e,t,this.value,n)}}class DateTimezoneSetter extends Setter{priority=10;subPriority=-1;constructor(e,t){super(),this.context=e||(e=>constructFrom(t,e))}set(e,t){return t.timestampIsSet?e:constructFrom(e,transpose(e,this.context))}}class Parser{run(e,t,n,r){const a=this.parse(e,t,n,r);return a?{setter:new ValueSetter(a.value,this.validate,this.set,this.priority,this.subPriority),rest:a.rest}:null}validate(e,t,n){return!0}}class EraParser extends Parser{priority=140;parse(e,t,n){switch(t){case"G":case"GG":case"GGG":return n.era(e,{width:"abbreviated"})||n.era(e,{width:"narrow"});case"GGGGG":return n.era(e,{width:"narrow"});default:return n.era(e,{width:"wide"})||n.era(e,{width:"abbreviated"})||n.era(e,{width:"narrow"})}}set(e,t,n){return t.era=n,e.setFullYear(n,0,1),e.setHours(0,0,0,0),e}incompatibleTokens=["R","u","t","T"]}const numericPatterns={month:/^(1[0-2]|0?\d)/,date:/^(3[0-1]|[0-2]?\d)/,dayOfYear:/^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,week:/^(5[0-3]|[0-4]?\d)/,hour23h:/^(2[0-3]|[0-1]?\d)/,hour24h:/^(2[0-4]|[0-1]?\d)/,hour11h:/^(1[0-1]|0?\d)/,hour12h:/^(1[0-2]|0?\d)/,minute:/^[0-5]?\d/,second:/^[0-5]?\d/,singleDigit:/^\d/,twoDigits:/^\d{1,2}/,threeDigits:/^\d{1,3}/,fourDigits:/^\d{1,4}/,anyDigitsSigned:/^-?\d+/,singleDigitSigned:/^-?\d/,twoDigitsSigned:/^-?\d{1,2}/,threeDigitsSigned:/^-?\d{1,3}/,fourDigitsSigned:/^-?\d{1,4}/},timezonePatterns={basicOptionalMinutes:/^([+-])(\d{2})(\d{2})?|Z/,basic:/^([+-])(\d{2})(\d{2})|Z/,basicOptionalSeconds:/^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,extended:/^([+-])(\d{2}):(\d{2})|Z/,extendedOptionalSeconds:/^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/};function mapValue(e,t){return e?{value:t(e.value),rest:e.rest}:e}function parseNumericPattern(e,t){const n=t.match(e);return n?{value:parseInt(n[0],10),rest:t.slice(n[0].length)}:null}function parseTimezonePattern(e,t){const n=t.match(e);if(!n)return null;if("Z"===n[0])return{value:0,rest:t.slice(1)};const r="+"===n[1]?1:-1,a=n[2]?parseInt(n[2],10):0,s=n[3]?parseInt(n[3],10):0,o=n[5]?parseInt(n[5],10):0;return{value:r*(a*millisecondsInHour+s*millisecondsInMinute+1e3*o),rest:t.slice(n[0].length)}}function parseAnyDigitsSigned(e){return parseNumericPattern(numericPatterns.anyDigitsSigned,e)}function parseNDigits(e,t){switch(e){case 1:return parseNumericPattern(numericPatterns.singleDigit,t);case 2:return parseNumericPattern(numericPatterns.twoDigits,t);case 3:return parseNumericPattern(numericPatterns.threeDigits,t);case 4:return parseNumericPattern(numericPatterns.fourDigits,t);default:return parseNumericPattern(new RegExp("^\\d{1,"+e+"}"),t)}}function parseNDigitsSigned(e,t){switch(e){case 1:return parseNumericPattern(numericPatterns.singleDigitSigned,t);case 2:return parseNumericPattern(numericPatterns.twoDigitsSigned,t);case 3:return parseNumericPattern(numericPatterns.threeDigitsSigned,t);case 4:return parseNumericPattern(numericPatterns.fourDigitsSigned,t);default:return parseNumericPattern(new RegExp("^-?\\d{1,"+e+"}"),t)}}function dayPeriodEnumToHours(e){switch(e){case"morning":return 4;case"evening":return 17;case"pm":case"noon":case"afternoon":return 12;default:return 0}}function normalizeTwoDigitYear(e,t){const n=t>0,r=n?t:1-t;let a;if(r<=50)a=e||100;else{const t=r+50;a=e+100*Math.trunc(t/100)-(e>=t%100?100:0)}return n?a:1-a}function isLeapYearIndex$1(e){return e%400==0||e%4==0&&e%100!=0}class YearParser extends Parser{priority=130;incompatibleTokens=["Y","R","u","w","I","i","e","c","t","T"];parse(e,t,n){const r=e=>({year:e,isTwoDigitYear:"yy"===t});switch(t){case"y":return mapValue(parseNDigits(4,e),r);case"yo":return mapValue(n.ordinalNumber(e,{unit:"year"}),r);default:return mapValue(parseNDigits(t.length,e),r)}}validate(e,t){return t.isTwoDigitYear||t.year>0}set(e,t,n){const r=e.getFullYear();if(n.isTwoDigitYear){const t=normalizeTwoDigitYear(n.year,r);return e.setFullYear(t,0,1),e.setHours(0,0,0,0),e}const a="era"in t&&1!==t.era?1-n.year:n.year;return e.setFullYear(a,0,1),e.setHours(0,0,0,0),e}}class LocalWeekYearParser extends Parser{priority=130;parse(e,t,n){const r=e=>({year:e,isTwoDigitYear:"YY"===t});switch(t){case"Y":return mapValue(parseNDigits(4,e),r);case"Yo":return mapValue(n.ordinalNumber(e,{unit:"year"}),r);default:return mapValue(parseNDigits(t.length,e),r)}}validate(e,t){return t.isTwoDigitYear||t.year>0}set(e,t,n,r){const a=getWeekYear(e,r);if(n.isTwoDigitYear){const t=normalizeTwoDigitYear(n.year,a);return e.setFullYear(t,0,r.firstWeekContainsDate),e.setHours(0,0,0,0),startOfWeek(e,r)}const s="era"in t&&1!==t.era?1-n.year:n.year;return e.setFullYear(s,0,r.firstWeekContainsDate),e.setHours(0,0,0,0),startOfWeek(e,r)}incompatibleTokens=["y","R","u","Q","q","M","L","I","d","D","i","t","T"]}class ISOWeekYearParser extends Parser{priority=130;parse(e,t){return parseNDigitsSigned("R"===t?4:t.length,e)}set(e,t,n){const r=constructFrom(e,0);return r.setFullYear(n,0,4),r.setHours(0,0,0,0),startOfISOWeek(r)}incompatibleTokens=["G","y","Y","u","Q","q","M","L","w","d","D","e","c","t","T"]}class ExtendedYearParser extends Parser{priority=130;parse(e,t){return parseNDigitsSigned("u"===t?4:t.length,e)}set(e,t,n){return e.setFullYear(n,0,1),e.setHours(0,0,0,0),e}incompatibleTokens=["G","y","Y","R","w","I","i","e","c","t","T"]}class QuarterParser extends Parser{priority=120;parse(e,t,n){switch(t){case"Q":case"QQ":return parseNDigits(t.length,e);case"Qo":return n.ordinalNumber(e,{unit:"quarter"});case"QQQ":return n.quarter(e,{width:"abbreviated",context:"formatting"})||n.quarter(e,{width:"narrow",context:"formatting"});case"QQQQQ":return n.quarter(e,{width:"narrow",context:"formatting"});default:return n.quarter(e,{width:"wide",context:"formatting"})||n.quarter(e,{width:"abbreviated",context:"formatting"})||n.quarter(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=1&&t<=4}set(e,t,n){return e.setMonth(3*(n-1),1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","M","L","w","I","d","D","i","e","c","t","T"]}class StandAloneQuarterParser extends Parser{priority=120;parse(e,t,n){switch(t){case"q":case"qq":return parseNDigits(t.length,e);case"qo":return n.ordinalNumber(e,{unit:"quarter"});case"qqq":return n.quarter(e,{width:"abbreviated",context:"standalone"})||n.quarter(e,{width:"narrow",context:"standalone"});case"qqqqq":return n.quarter(e,{width:"narrow",context:"standalone"});default:return n.quarter(e,{width:"wide",context:"standalone"})||n.quarter(e,{width:"abbreviated",context:"standalone"})||n.quarter(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=1&&t<=4}set(e,t,n){return e.setMonth(3*(n-1),1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","Q","M","L","w","I","d","D","i","e","c","t","T"]}class MonthParser extends Parser{incompatibleTokens=["Y","R","q","Q","L","w","I","D","i","e","c","t","T"];priority=110;parse(e,t,n){const r=e=>e-1;switch(t){case"M":return mapValue(parseNumericPattern(numericPatterns.month,e),r);case"MM":return mapValue(parseNDigits(2,e),r);case"Mo":return mapValue(n.ordinalNumber(e,{unit:"month"}),r);case"MMM":return n.month(e,{width:"abbreviated",context:"formatting"})||n.month(e,{width:"narrow",context:"formatting"});case"MMMMM":return n.month(e,{width:"narrow",context:"formatting"});default:return n.month(e,{width:"wide",context:"formatting"})||n.month(e,{width:"abbreviated",context:"formatting"})||n.month(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=11}set(e,t,n){return e.setMonth(n,1),e.setHours(0,0,0,0),e}}class StandAloneMonthParser extends Parser{priority=110;parse(e,t,n){const r=e=>e-1;switch(t){case"L":return mapValue(parseNumericPattern(numericPatterns.month,e),r);case"LL":return mapValue(parseNDigits(2,e),r);case"Lo":return mapValue(n.ordinalNumber(e,{unit:"month"}),r);case"LLL":return n.month(e,{width:"abbreviated",context:"standalone"})||n.month(e,{width:"narrow",context:"standalone"});case"LLLLL":return n.month(e,{width:"narrow",context:"standalone"});default:return n.month(e,{width:"wide",context:"standalone"})||n.month(e,{width:"abbreviated",context:"standalone"})||n.month(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=0&&t<=11}set(e,t,n){return e.setMonth(n,1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","M","w","I","D","i","e","c","t","T"]}function setWeek(e,t,n){const r=toDate(e,n?.in),a=getWeek(r,n)-t;return r.setDate(r.getDate()-7*a),toDate(r,n?.in)}class LocalWeekParser extends Parser{priority=100;parse(e,t,n){switch(t){case"w":return parseNumericPattern(numericPatterns.week,e);case"wo":return n.ordinalNumber(e,{unit:"week"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=1&&t<=53}set(e,t,n,r){return startOfWeek(setWeek(e,n,r),r)}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","i","t","T"]}function setISOWeek(e,t,n){const r=toDate(e,n?.in),a=getISOWeek(r,n)-t;return r.setDate(r.getDate()-7*a),r}class ISOWeekParser extends Parser{priority=100;parse(e,t,n){switch(t){case"I":return parseNumericPattern(numericPatterns.week,e);case"Io":return n.ordinalNumber(e,{unit:"week"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=1&&t<=53}set(e,t,n){return startOfISOWeek(setISOWeek(e,n))}incompatibleTokens=["y","Y","u","q","Q","M","L","w","d","D","e","c","t","T"]}const DAYS_IN_MONTH=[31,28,31,30,31,30,31,31,30,31,30,31],DAYS_IN_MONTH_LEAP_YEAR=[31,29,31,30,31,30,31,31,30,31,30,31];class DateParser extends Parser{priority=90;subPriority=1;parse(e,t,n){switch(t){case"d":return parseNumericPattern(numericPatterns.date,e);case"do":return n.ordinalNumber(e,{unit:"date"});default:return parseNDigits(t.length,e)}}validate(e,t){const n=isLeapYearIndex$1(e.getFullYear()),r=e.getMonth();return n?t>=1&&t<=DAYS_IN_MONTH_LEAP_YEAR[r]:t>=1&&t<=DAYS_IN_MONTH[r]}set(e,t,n){return e.setDate(n),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","w","I","D","i","e","c","t","T"]}class DayOfYearParser extends Parser{priority=90;subpriority=1;parse(e,t,n){switch(t){case"D":case"DD":return parseNumericPattern(numericPatterns.dayOfYear,e);case"Do":return n.ordinalNumber(e,{unit:"date"});default:return parseNDigits(t.length,e)}}validate(e,t){return isLeapYearIndex$1(e.getFullYear())?t>=1&&t<=366:t>=1&&t<=365}set(e,t,n){return e.setMonth(0,n),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","M","L","w","I","d","E","i","e","c","t","T"]}function setDay(e,t,n){const r=getDefaultOptions$1(),a=n?.weekStartsOn??n?.locale?.options?.weekStartsOn??r.weekStartsOn??r.locale?.options?.weekStartsOn??0,s=toDate(e,n?.in),o=s.getDay(),i=7-a;return addDays(s,t<0||t>6?t-(o+i)%7:((t%7+7)%7+i)%7-(o+i)%7,n)}class DayParser extends Parser{priority=90;parse(e,t,n){switch(t){case"E":case"EE":case"EEE":return n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"});case"EEEEE":return n.day(e,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"});default:return n.day(e,{width:"wide",context:"formatting"})||n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=6}set(e,t,n,r){return(e=setDay(e,n,r)).setHours(0,0,0,0),e}incompatibleTokens=["D","i","e","c","t","T"]}class LocalDayParser extends Parser{priority=90;parse(e,t,n,r){const a=e=>{const t=7*Math.floor((e-1)/7);return(e+r.weekStartsOn+6)%7+t};switch(t){case"e":case"ee":return mapValue(parseNDigits(t.length,e),a);case"eo":return mapValue(n.ordinalNumber(e,{unit:"day"}),a);case"eee":return n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"});case"eeeee":return n.day(e,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"});default:return n.day(e,{width:"wide",context:"formatting"})||n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=6}set(e,t,n,r){return(e=setDay(e,n,r)).setHours(0,0,0,0),e}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","E","i","c","t","T"]}class StandAloneLocalDayParser extends Parser{priority=90;parse(e,t,n,r){const a=e=>{const t=7*Math.floor((e-1)/7);return(e+r.weekStartsOn+6)%7+t};switch(t){case"c":case"cc":return mapValue(parseNDigits(t.length,e),a);case"co":return mapValue(n.ordinalNumber(e,{unit:"day"}),a);case"ccc":return n.day(e,{width:"abbreviated",context:"standalone"})||n.day(e,{width:"short",context:"standalone"})||n.day(e,{width:"narrow",context:"standalone"});case"ccccc":return n.day(e,{width:"narrow",context:"standalone"});case"cccccc":return n.day(e,{width:"short",context:"standalone"})||n.day(e,{width:"narrow",context:"standalone"});default:return n.day(e,{width:"wide",context:"standalone"})||n.day(e,{width:"abbreviated",context:"standalone"})||n.day(e,{width:"short",context:"standalone"})||n.day(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=0&&t<=6}set(e,t,n,r){return(e=setDay(e,n,r)).setHours(0,0,0,0),e}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","E","i","e","t","T"]}function setISODay(e,t,n){const r=toDate(e,n?.in);return addDays(r,t-getISODay(r,n),n)}class ISODayParser extends Parser{priority=90;parse(e,t,n){const r=e=>0===e?7:e;switch(t){case"i":case"ii":return parseNDigits(t.length,e);case"io":return n.ordinalNumber(e,{unit:"day"});case"iii":return mapValue(n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"}),r);case"iiiii":return mapValue(n.day(e,{width:"narrow",context:"formatting"}),r);case"iiiiii":return mapValue(n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"}),r);default:return mapValue(n.day(e,{width:"wide",context:"formatting"})||n.day(e,{width:"abbreviated",context:"formatting"})||n.day(e,{width:"short",context:"formatting"})||n.day(e,{width:"narrow",context:"formatting"}),r)}}validate(e,t){return t>=1&&t<=7}set(e,t,n){return(e=setISODay(e,n)).setHours(0,0,0,0),e}incompatibleTokens=["y","Y","u","q","Q","M","L","w","d","D","E","e","c","t","T"]}class AMPMParser extends Parser{priority=80;parse(e,t,n){switch(t){case"a":case"aa":case"aaa":return n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"});case"aaaaa":return n.dayPeriod(e,{width:"narrow",context:"formatting"});default:return n.dayPeriod(e,{width:"wide",context:"formatting"})||n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,n){return e.setHours(dayPeriodEnumToHours(n),0,0,0),e}incompatibleTokens=["b","B","H","k","t","T"]}class AMPMMidnightParser extends Parser{priority=80;parse(e,t,n){switch(t){case"b":case"bb":case"bbb":return n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"});case"bbbbb":return n.dayPeriod(e,{width:"narrow",context:"formatting"});default:return n.dayPeriod(e,{width:"wide",context:"formatting"})||n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,n){return e.setHours(dayPeriodEnumToHours(n),0,0,0),e}incompatibleTokens=["a","B","H","k","t","T"]}class DayPeriodParser extends Parser{priority=80;parse(e,t,n){switch(t){case"B":case"BB":case"BBB":return n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"});case"BBBBB":return n.dayPeriod(e,{width:"narrow",context:"formatting"});default:return n.dayPeriod(e,{width:"wide",context:"formatting"})||n.dayPeriod(e,{width:"abbreviated",context:"formatting"})||n.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,n){return e.setHours(dayPeriodEnumToHours(n),0,0,0),e}incompatibleTokens=["a","b","t","T"]}class Hour1to12Parser extends Parser{priority=70;parse(e,t,n){switch(t){case"h":return parseNumericPattern(numericPatterns.hour12h,e);case"ho":return n.ordinalNumber(e,{unit:"hour"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=1&&t<=12}set(e,t,n){const r=e.getHours()>=12;return r&&n<12?e.setHours(n+12,0,0,0):r||12!==n?e.setHours(n,0,0,0):e.setHours(0,0,0,0),e}incompatibleTokens=["H","K","k","t","T"]}class Hour0to23Parser extends Parser{priority=70;parse(e,t,n){switch(t){case"H":return parseNumericPattern(numericPatterns.hour23h,e);case"Ho":return n.ordinalNumber(e,{unit:"hour"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=0&&t<=23}set(e,t,n){return e.setHours(n,0,0,0),e}incompatibleTokens=["a","b","h","K","k","t","T"]}class Hour0To11Parser extends Parser{priority=70;parse(e,t,n){switch(t){case"K":return parseNumericPattern(numericPatterns.hour11h,e);case"Ko":return n.ordinalNumber(e,{unit:"hour"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=0&&t<=11}set(e,t,n){return e.getHours()>=12&&n<12?e.setHours(n+12,0,0,0):e.setHours(n,0,0,0),e}incompatibleTokens=["h","H","k","t","T"]}class Hour1To24Parser extends Parser{priority=70;parse(e,t,n){switch(t){case"k":return parseNumericPattern(numericPatterns.hour24h,e);case"ko":return n.ordinalNumber(e,{unit:"hour"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=1&&t<=24}set(e,t,n){const r=n<=24?n%24:n;return e.setHours(r,0,0,0),e}incompatibleTokens=["a","b","h","H","K","t","T"]}class MinuteParser extends Parser{priority=60;parse(e,t,n){switch(t){case"m":return parseNumericPattern(numericPatterns.minute,e);case"mo":return n.ordinalNumber(e,{unit:"minute"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=0&&t<=59}set(e,t,n){return e.setMinutes(n,0,0),e}incompatibleTokens=["t","T"]}class SecondParser extends Parser{priority=50;parse(e,t,n){switch(t){case"s":return parseNumericPattern(numericPatterns.second,e);case"so":return n.ordinalNumber(e,{unit:"second"});default:return parseNDigits(t.length,e)}}validate(e,t){return t>=0&&t<=59}set(e,t,n){return e.setSeconds(n,0),e}incompatibleTokens=["t","T"]}class FractionOfSecondParser extends Parser{priority=30;parse(e,t){return mapValue(parseNDigits(t.length,e),(e=>Math.trunc(e*Math.pow(10,3-t.length))))}set(e,t,n){return e.setMilliseconds(n),e}incompatibleTokens=["t","T"]}class ISOTimezoneWithZParser extends Parser{priority=10;parse(e,t){switch(t){case"X":return parseTimezonePattern(timezonePatterns.basicOptionalMinutes,e);case"XX":return parseTimezonePattern(timezonePatterns.basic,e);case"XXXX":return parseTimezonePattern(timezonePatterns.basicOptionalSeconds,e);case"XXXXX":return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds,e);default:return parseTimezonePattern(timezonePatterns.extended,e)}}set(e,t,n){return t.timestampIsSet?e:constructFrom(e,e.getTime()-getTimezoneOffsetInMilliseconds(e)-n)}incompatibleTokens=["t","T","x"]}class ISOTimezoneParser extends Parser{priority=10;parse(e,t){switch(t){case"x":return parseTimezonePattern(timezonePatterns.basicOptionalMinutes,e);case"xx":return parseTimezonePattern(timezonePatterns.basic,e);case"xxxx":return parseTimezonePattern(timezonePatterns.basicOptionalSeconds,e);case"xxxxx":return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds,e);default:return parseTimezonePattern(timezonePatterns.extended,e)}}set(e,t,n){return t.timestampIsSet?e:constructFrom(e,e.getTime()-getTimezoneOffsetInMilliseconds(e)-n)}incompatibleTokens=["t","T","X"]}class TimestampSecondsParser extends Parser{priority=40;parse(e){return parseAnyDigitsSigned(e)}set(e,t,n){return[constructFrom(e,1e3*n),{timestampIsSet:!0}]}incompatibleTokens="*"}class TimestampMillisecondsParser extends Parser{priority=20;parse(e){return parseAnyDigitsSigned(e)}set(e,t,n){return[constructFrom(e,n),{timestampIsSet:!0}]}incompatibleTokens="*"}const parsers={G:new EraParser,y:new YearParser,Y:new LocalWeekYearParser,R:new ISOWeekYearParser,u:new ExtendedYearParser,Q:new QuarterParser,q:new StandAloneQuarterParser,M:new MonthParser,L:new StandAloneMonthParser,w:new LocalWeekParser,I:new ISOWeekParser,d:new DateParser,D:new DayOfYearParser,E:new DayParser,e:new LocalDayParser,c:new StandAloneLocalDayParser,i:new ISODayParser,a:new AMPMParser,b:new AMPMMidnightParser,B:new DayPeriodParser,h:new Hour1to12Parser,H:new Hour0to23Parser,K:new Hour0To11Parser,k:new Hour1To24Parser,m:new MinuteParser,s:new SecondParser,S:new FractionOfSecondParser,X:new ISOTimezoneWithZParser,x:new ISOTimezoneParser,t:new TimestampSecondsParser,T:new TimestampMillisecondsParser},formattingTokensRegExp$1=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,longFormattingTokensRegExp=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,escapedStringRegExp$1=/^'([^]*?)'?$/,doubleQuoteRegExp$1=/''/g,notWhitespaceRegExp=/\S/,unescapedLatinCharacterRegExp$1=/[a-zA-Z]/;function parse(e,t,n,r){const a=()=>constructFrom(r?.in||n,NaN),s=getDefaultOptions(),o=r?.locale??s.locale??enUS,i=r?.firstWeekContainsDate??r?.locale?.options?.firstWeekContainsDate??s.firstWeekContainsDate??s.locale?.options?.firstWeekContainsDate??1,u=r?.weekStartsOn??r?.locale?.options?.weekStartsOn??s.weekStartsOn??s.locale?.options?.weekStartsOn??0;if(!t)return e?a():toDate(n,r?.in);const c={firstWeekContainsDate:i,weekStartsOn:u,locale:o},d=[new DateTimezoneSetter(r?.in,n)],l=t.match(longFormattingTokensRegExp).map((e=>{const t=e[0];if(t in longFormatters){return(0,longFormatters[t])(e,o.formatLong)}return e})).join("").match(formattingTokensRegExp$1),f=[];for(let n of l){!r?.useAdditionalWeekYearTokens&&isProtectedWeekYearToken(n)&&warnOrThrowProtectedError(n,t,e),!r?.useAdditionalDayOfYearTokens&&isProtectedDayOfYearToken(n)&&warnOrThrowProtectedError(n,t,e);const s=n[0],i=parsers[s];if(i){const{incompatibleTokens:t}=i;if(Array.isArray(t)){const e=f.find((e=>t.includes(e.token)||e.token===s));if(e)throw new RangeError(`The format string mustn't contain \`${e.fullToken}\` and \`${n}\` at the same time`)}else if("*"===i.incompatibleTokens&&f.length>0)throw new RangeError(`The format string mustn't contain \`${n}\` and any other token at the same time`);f.push({token:s,fullToken:n});const r=i.run(e,n,o.match,c);if(!r)return a();d.push(r.setter),e=r.rest}else{if(s.match(unescapedLatinCharacterRegExp$1))throw new RangeError("Format string contains an unescaped latin alphabet character `"+s+"`");if("''"===n?n="'":"'"===s&&(n=cleanEscapedString$1(n)),0!==e.indexOf(n))return a();e=e.slice(n.length)}}if(e.length>0&&notWhitespaceRegExp.test(e))return a();const m=d.map((e=>e.priority)).sort(((e,t)=>t-e)).filter(((e,t,n)=>n.indexOf(e)===t)).map((e=>d.filter((t=>t.priority===e)).sort(((e,t)=>t.subPriority-e.subPriority)))).map((e=>e[0]));let h=toDate(n,r?.in);if(isNaN(+h))return a();const g={};for(const e of m){if(!e.validate(h,c))return a();const t=e.set(h,g,c);Array.isArray(t)?(h=t[0],Object.assign(g,t[1])):h=t}return h}function cleanEscapedString$1(e){return e.match(escapedStringRegExp$1)[1].replace(doubleQuoteRegExp$1,"'")}function isMatch(e,t,n){return isValid(parse(e,t,new Date,n))}function isMonday(e,t){return 1===toDate(e,t?.in).getDay()}function isPast(e){return+toDate(e)<Date.now()}function startOfHour(e,t){const n=toDate(e,t?.in);return n.setMinutes(0,0,0),n}function isSameHour(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return+startOfHour(r)==+startOfHour(a)}function isSameWeek(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return+startOfWeek(r,n)==+startOfWeek(a,n)}function isSameISOWeek(e,t,n){return isSameWeek(e,t,{...n,weekStartsOn:1})}function isSameISOWeekYear(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return+startOfISOWeekYear(r)==+startOfISOWeekYear(a)}function startOfMinute(e,t){const n=toDate(e,t?.in);return n.setSeconds(0,0),n}function isSameMinute(e,t){return+startOfMinute(e)==+startOfMinute(t)}function isSameMonth(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return r.getFullYear()===a.getFullYear()&&r.getMonth()===a.getMonth()}function isSameQuarter(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return+startOfQuarter(r)==+startOfQuarter(a)}function startOfSecond(e,t){const n=toDate(e,t?.in);return n.setMilliseconds(0),n}function isSameSecond(e,t){return+startOfSecond(e)==+startOfSecond(t)}function isSameYear(e,t,n){const[r,a]=normalizeDates(n?.in,e,t);return r.getFullYear()===a.getFullYear()}function isThisHour(e,t){return isSameHour(toDate(e,t?.in),constructNow(t?.in||e))}function isThisISOWeek(e,t){return isSameISOWeek(constructFrom(t?.in||e,e),constructNow(t?.in||e))}function isThisMinute(e){return isSameMinute(e,constructNow(e))}function isThisMonth(e,t){return isSameMonth(constructFrom(t?.in||e,e),constructNow(t?.in||e))}function isThisQuarter(e,t){return isSameQuarter(constructFrom(t?.in||e,e),constructNow(t?.in||e))}function isThisSecond(e){return isSameSecond(e,constructNow(e))}function isThisWeek(e,t){return isSameWeek(constructFrom(t?.in||e,e),constructNow(t?.in||e),t)}function isThisYear(e,t){return isSameYear(constructFrom(t?.in||e,e),constructNow(t?.in||e))}function isThursday(e,t){return 4===toDate(e,t?.in).getDay()}function isToday(e,t){return isSameDay(constructFrom(t?.in||e,e),constructNow(t?.in||e))}function isTomorrow(e,t){return isSameDay(e,addDays(constructNow(t?.in||e),1),t)}function isTuesday(e,t){return 2===toDate(e,t?.in).getDay()}function isWednesday(e,t){return 3===toDate(e,t?.in).getDay()}function isWithinInterval(e,t,n){const r=+toDate(e,n?.in),[a,s]=[+toDate(t.start,n?.in),+toDate(t.end,n?.in)].sort(((e,t)=>e-t));return r>=a&&r<=s}function subDays(e,t,n){return addDays(e,-t,n)}function isYesterday(e,t){return isSameDay(constructFrom(t?.in||e,e),subDays(constructNow(t?.in||e),1))}function lastDayOfDecade(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=9+10*Math.floor(r/10);return n.setFullYear(a+1,0,0),n.setHours(0,0,0,0),toDate(n,t?.in)}function lastDayOfWeek(e,t){const n=getDefaultOptions$1(),r=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,a=toDate(e,t?.in),s=a.getDay(),o=6+(s<r?-7:0)-(s-r);return a.setHours(0,0,0,0),a.setDate(a.getDate()+o),a}function lastDayOfISOWeek(e,t){return lastDayOfWeek(e,{...t,weekStartsOn:1})}function lastDayOfISOWeekYear(e,t){const n=getISOWeekYear(e,t),r=constructFrom(t?.in||e,0);r.setFullYear(n+1,0,4),r.setHours(0,0,0,0);const a=startOfISOWeek(r,t);return a.setDate(a.getDate()-1),a}function lastDayOfQuarter(e,t){const n=toDate(e,t?.in),r=n.getMonth(),a=r-r%3+3;return n.setMonth(a,0),n.setHours(0,0,0,0),n}function lastDayOfYear(e,t){const n=toDate(e,t?.in),r=n.getFullYear();return n.setFullYear(r+1,0,0),n.setHours(0,0,0,0),n}const formattingTokensRegExp=/(\w)\1*|''|'(''|[^'])+('|$)|./g,escapedStringRegExp=/^'([^]*?)'?$/,doubleQuoteRegExp=/''/g,unescapedLatinCharacterRegExp=/[a-zA-Z]/;function lightFormat(e,t){const n=toDate(e);if(!isValid(n))throw new RangeError("Invalid time value");const r=t.match(formattingTokensRegExp);if(!r)return"";return r.map((e=>{if("''"===e)return"'";const t=e[0];if("'"===t)return cleanEscapedString(e);const r=lightFormatters[t];if(r)return r(n,e);if(t.match(unescapedLatinCharacterRegExp))throw new RangeError("Format string contains an unescaped latin alphabet character `"+t+"`");return e})).join("")}function cleanEscapedString(e){const t=e.match(escapedStringRegExp);return t?t[1].replace(doubleQuoteRegExp,"'"):e}function milliseconds({years:e,months:t,weeks:n,days:r,hours:a,minutes:s,seconds:o}){let i=0;e&&(i+=365.2425*e),t&&(i+=30.436875*t),n&&(i+=7*n),r&&(i+=r);let u=24*i*60*60;return a&&(u+=60*a*60),s&&(u+=60*s),o&&(u+=o),Math.trunc(1e3*u)}function millisecondsToHours(e){const t=e/millisecondsInHour;return Math.trunc(t)}function millisecondsToMinutes(e){const t=e/millisecondsInMinute;return Math.trunc(t)}function millisecondsToSeconds(e){const t=e/1e3;return Math.trunc(t)}function minutesToHours(e){const t=e/60;return Math.trunc(t)}function minutesToMilliseconds(e){return Math.trunc(e*millisecondsInMinute)}function minutesToSeconds(e){return Math.trunc(60*e)}function monthsToQuarters(e){const t=e/3;return Math.trunc(t)}function monthsToYears(e){const t=e/12;return Math.trunc(t)}function nextDay(e,t,n){let r=t-getDay(e,n);return r<=0&&(r+=7),addDays(e,r,n)}function nextFriday(e,t){return nextDay(e,5,t)}function nextMonday(e,t){return nextDay(e,1,t)}function nextSaturday(e,t){return nextDay(e,6,t)}function nextSunday(e,t){return nextDay(e,0,t)}function nextThursday(e,t){return nextDay(e,4,t)}function nextTuesday(e,t){return nextDay(e,2,t)}function nextWednesday(e,t){return nextDay(e,3,t)}function parseISO(e,t){const n=()=>constructFrom(t?.in,NaN),r=t?.additionalDigits??2,a=splitDateString(e);let s;if(a.date){const e=parseYear(a.date,r);s=parseDate(e.restDateString,e.year)}if(!s||isNaN(+s))return n();const o=+s;let i,u=0;if(a.time&&(u=parseTime(a.time),isNaN(u)))return n();if(!a.timezone){const e=new Date(o+u),n=toDate(0,t?.in);return n.setFullYear(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate()),n.setHours(e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds()),n}return i=parseTimezone(a.timezone),isNaN(i)?n():toDate(o+u+i,t?.in)}const patterns={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},dateRegex=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,timeRegex=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,timezoneRegex=/^([+-])(\d{2})(?::?(\d{2}))?$/;function splitDateString(e){const t={},n=e.split(patterns.dateTimeDelimiter);let r;if(n.length>2)return t;if(/:/.test(n[0])?r=n[0]:(t.date=n[0],r=n[1],patterns.timeZoneDelimiter.test(t.date)&&(t.date=e.split(patterns.timeZoneDelimiter)[0],r=e.substr(t.date.length,e.length))),r){const e=patterns.timezone.exec(r);e?(t.time=r.replace(e[1],""),t.timezone=e[1]):t.time=r}return t}function parseYear(e,t){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),r=e.match(n);if(!r)return{year:NaN,restDateString:""};const a=r[1]?parseInt(r[1]):null,s=r[2]?parseInt(r[2]):null;return{year:null===s?a:100*s,restDateString:e.slice((r[1]||r[2]).length)}}function parseDate(e,t){if(null===t)return new Date(NaN);const n=e.match(dateRegex);if(!n)return new Date(NaN);const r=!!n[4],a=parseDateUnit(n[1]),s=parseDateUnit(n[2])-1,o=parseDateUnit(n[3]),i=parseDateUnit(n[4]),u=parseDateUnit(n[5])-1;if(r)return validateWeekDate(t,i,u)?dayOfISOWeekYear(t,i,u):new Date(NaN);{const e=new Date(0);return validateDate(t,s,o)&&validateDayOfYearDate(t,a)?(e.setUTCFullYear(t,s,Math.max(a,o)),e):new Date(NaN)}}function parseDateUnit(e){return e?parseInt(e):1}function parseTime(e){const t=e.match(timeRegex);if(!t)return NaN;const n=parseTimeUnit(t[1]),r=parseTimeUnit(t[2]),a=parseTimeUnit(t[3]);return validateTime(n,r,a)?n*millisecondsInHour+r*millisecondsInMinute+1e3*a:NaN}function parseTimeUnit(e){return e&&parseFloat(e.replace(",","."))||0}function parseTimezone(e){if("Z"===e)return 0;const t=e.match(timezoneRegex);if(!t)return 0;const n="+"===t[1]?-1:1,r=parseInt(t[2]),a=t[3]&&parseInt(t[3])||0;return validateTimezone(r,a)?n*(r*millisecondsInHour+a*millisecondsInMinute):NaN}function dayOfISOWeekYear(e,t,n){const r=new Date(0);r.setUTCFullYear(e,0,4);const a=7*(t-1)+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+a),r}const daysInMonths=[31,null,31,30,31,30,31,31,30,31,30,31];function isLeapYearIndex(e){return e%400==0||e%4==0&&e%100!=0}function validateDate(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(daysInMonths[t]||(isLeapYearIndex(e)?29:28))}function validateDayOfYearDate(e,t){return t>=1&&t<=(isLeapYearIndex(e)?366:365)}function validateWeekDate(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}function validateTime(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}function validateTimezone(e,t){return t>=0&&t<=59}function parseJSON(e,t){const n=e.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);return toDate(n?Date.UTC(+n[1],+n[2]-1,+n[3],+n[4]-(+n[9]||0)*("-"==n[8]?-1:1),+n[5]-(+n[10]||0)*("-"==n[8]?-1:1),+n[6],+((n[7]||"0")+"00").substring(0,3)):NaN,t?.in)}function previousDay(e,t,n){let r=getDay(e,n)-t;return r<=0&&(r+=7),subDays(e,r,n)}function previousFriday(e,t){return previousDay(e,5,t)}function previousMonday(e,t){return previousDay(e,1,t)}function previousSaturday(e,t){return previousDay(e,6,t)}function previousSunday(e,t){return previousDay(e,0,t)}function previousThursday(e,t){return previousDay(e,4,t)}function previousTuesday(e,t){return previousDay(e,2,t)}function previousWednesday(e,t){return previousDay(e,3,t)}function quartersToMonths(e){return Math.trunc(3*e)}function quartersToYears(e){const t=e/4;return Math.trunc(t)}function roundToNearestHours(e,t){const n=t?.nearestTo??1;if(n<1||n>12)return constructFrom(t?.in||e,NaN);const r=toDate(e,t?.in),a=r.getMinutes()/60,s=r.getSeconds()/60/60,o=r.getMilliseconds()/1e3/60/60,i=r.getHours()+a+s+o,u=getRoundingMethod(t?.roundingMethod??"round")(i/n)*n;return r.setHours(u,0,0,0),r}function roundToNearestMinutes(e,t){const n=t?.nearestTo??1;if(n<1||n>30)return constructFrom(e,NaN);const r=toDate(e,t?.in),a=r.getSeconds()/60,s=r.getMilliseconds()/1e3/60,o=r.getMinutes()+a+s,i=getRoundingMethod(t?.roundingMethod??"round")(o/n)*n;return r.setMinutes(i,0,0),r}function secondsToHours(e){const t=e/3600;return Math.trunc(t)}function secondsToMilliseconds(e){return 1e3*e}function secondsToMinutes(e){const t=e/60;return Math.trunc(t)}function setMonth(e,t,n){const r=toDate(e,n?.in),a=r.getFullYear(),s=r.getDate(),o=constructFrom(n?.in||e,0);o.setFullYear(a,t,15),o.setHours(0,0,0,0);const i=getDaysInMonth(o);return r.setMonth(t,Math.min(s,i)),r}function set(e,t,n){let r=toDate(e,n?.in);return isNaN(+r)?constructFrom(n?.in||e,NaN):(null!=t.year&&r.setFullYear(t.year),null!=t.month&&(r=setMonth(r,t.month)),null!=t.date&&r.setDate(t.date),null!=t.hours&&r.setHours(t.hours),null!=t.minutes&&r.setMinutes(t.minutes),null!=t.seconds&&r.setSeconds(t.seconds),null!=t.milliseconds&&r.setMilliseconds(t.milliseconds),r)}function setDate(e,t,n){const r=toDate(e,n?.in);return r.setDate(t),r}function setDayOfYear(e,t,n){const r=toDate(e,n?.in);return r.setMonth(0),r.setDate(t),r}function setDefaultOptions(e){const t={},n=getDefaultOptions$1();for(const e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e]);for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(void 0===e[n]?delete t[n]:t[n]=e[n]);setDefaultOptions$1(t)}function setHours(e,t,n){const r=toDate(e,n?.in);return r.setHours(t),r}function setMilliseconds(e,t,n){const r=toDate(e,n?.in);return r.setMilliseconds(t),r}function setMinutes(e,t,n){const r=toDate(e,n?.in);return r.setMinutes(t),r}function setQuarter(e,t,n){const r=toDate(e,n?.in),a=t-(Math.trunc(r.getMonth()/3)+1);return setMonth(r,r.getMonth()+3*a)}function setSeconds(e,t,n){const r=toDate(e,n?.in);return r.setSeconds(t),r}function setWeekYear(e,t,n){const r=getDefaultOptions$1(),a=n?.firstWeekContainsDate??n?.locale?.options?.firstWeekContainsDate??r.firstWeekContainsDate??r.locale?.options?.firstWeekContainsDate??1,s=differenceInCalendarDays(toDate(e,n?.in),startOfWeekYear(e,n),n),o=constructFrom(n?.in||e,0);o.setFullYear(t,0,a),o.setHours(0,0,0,0);const i=startOfWeekYear(o,n);return i.setDate(i.getDate()+s),i}function setYear(e,t,n){const r=toDate(e,n?.in);return isNaN(+r)?constructFrom(n?.in||e,NaN):(r.setFullYear(t),r)}function startOfDecade(e,t){const n=toDate(e,t?.in),r=n.getFullYear(),a=10*Math.floor(r/10);return n.setFullYear(a,0,1),n.setHours(0,0,0,0),n}function startOfToday(e){return startOfDay(Date.now(),e)}function startOfTomorrow(e){const t=constructNow(e?.in),n=t.getFullYear(),r=t.getMonth(),a=t.getDate(),s=constructFrom(e?.in,0);return s.setFullYear(n,r,a+1),s.setHours(0,0,0,0),s}function startOfYesterday(e){const t=constructNow(e?.in),n=t.getFullYear(),r=t.getMonth(),a=t.getDate(),s=constructNow(e?.in);return s.setFullYear(n,r,a-1),s.setHours(0,0,0,0),s}function subMonths(e,t,n){return addMonths(e,-t,n)}function sub(e,t,n){const{years:r=0,months:a=0,weeks:s=0,days:o=0,hours:i=0,minutes:u=0,seconds:c=0}=t,d=subDays(subMonths(e,a+12*r,n),o+7*s,n),l=1e3*(c+60*(u+60*i));return constructFrom(n?.in||e,+d-l)}function subBusinessDays(e,t,n){return addBusinessDays(e,-t,n)}function subHours(e,t,n){return addHours(e,-t,n)}function subMilliseconds(e,t,n){return addMilliseconds(e,-t,n)}function subMinutes(e,t,n){return addMinutes(e,-t,n)}function subQuarters(e,t,n){return addQuarters(e,-t,n)}function subSeconds(e,t,n){return addSeconds(e,-t,n)}function subWeeks(e,t,n){return addWeeks(e,-t,n)}function subYears(e,t,n){return addYears(e,-t,n)}function weeksToDays(e){return Math.trunc(7*e)}function yearsToDays(e){return Math.trunc(365.2425*e)}function yearsToMonths(e){return Math.trunc(12*e)}function yearsToQuarters(e){return Math.trunc(4*e)}var datefns=Object.freeze({__proto__:null,add:add,addBusinessDays:addBusinessDays,addDays:addDays,addHours:addHours,addISOWeekYears:addISOWeekYears,addMilliseconds:addMilliseconds,addMinutes:addMinutes,addMonths:addMonths,addQuarters:addQuarters,addSeconds:addSeconds,addWeeks:addWeeks,addYears:addYears,areIntervalsOverlapping:areIntervalsOverlapping,clamp:clamp,closestIndexTo:closestIndexTo,closestTo:closestTo,compareAsc:compareAsc,compareDesc:compareDesc,constructFrom:constructFrom,constructNow:constructNow,daysToWeeks:daysToWeeks,differenceInBusinessDays:differenceInBusinessDays,differenceInCalendarDays:differenceInCalendarDays,differenceInCalendarISOWeekYears:differenceInCalendarISOWeekYears,differenceInCalendarISOWeeks:differenceInCalendarISOWeeks,differenceInCalendarMonths:differenceInCalendarMonths,differenceInCalendarQuarters:differenceInCalendarQuarters,differenceInCalendarWeeks:differenceInCalendarWeeks,differenceInCalendarYears:differenceInCalendarYears,differenceInDays:differenceInDays,differenceInHours:differenceInHours,differenceInISOWeekYears:differenceInISOWeekYears,differenceInMilliseconds:differenceInMilliseconds,differenceInMinutes:differenceInMinutes,differenceInMonths:differenceInMonths,differenceInQuarters:differenceInQuarters,differenceInSeconds:differenceInSeconds,differenceInWeeks:differenceInWeeks,differenceInYears:differenceInYears,eachDayOfInterval:eachDayOfInterval,eachHourOfInterval:eachHourOfInterval,eachMinuteOfInterval:eachMinuteOfInterval,eachMonthOfInterval:eachMonthOfInterval,eachQuarterOfInterval:eachQuarterOfInterval,eachWeekOfInterval:eachWeekOfInterval,eachWeekendOfInterval:eachWeekendOfInterval,eachWeekendOfMonth:eachWeekendOfMonth,eachWeekendOfYear:eachWeekendOfYear,eachYearOfInterval:eachYearOfInterval,endOfDay:endOfDay,endOfDecade:endOfDecade,endOfHour:endOfHour,endOfISOWeek:endOfISOWeek,endOfISOWeekYear:endOfISOWeekYear,endOfMinute:endOfMinute,endOfMonth:endOfMonth,endOfQuarter:endOfQuarter,endOfSecond:endOfSecond,endOfToday:endOfToday,endOfTomorrow:endOfTomorrow,endOfWeek:endOfWeek,endOfYear:endOfYear,endOfYesterday:endOfYesterday,format:format,formatDate:format,formatDistance:formatDistance,formatDistanceStrict:formatDistanceStrict,formatDistanceToNow:formatDistanceToNow,formatDistanceToNowStrict:formatDistanceToNowStrict,formatDuration:formatDuration,formatISO:formatISO,formatISO9075:formatISO9075,formatISODuration:formatISODuration,formatRFC3339:formatRFC3339,formatRFC7231:formatRFC7231,formatRelative:formatRelative,formatters:formatters,fromUnixTime:fromUnixTime,getDate:getDate,getDay:getDay,getDayOfYear:getDayOfYear,getDaysInMonth:getDaysInMonth,getDaysInYear:getDaysInYear,getDecade:getDecade,getDefaultOptions:getDefaultOptions,getHours:getHours,getISODay:getISODay,getISOWeek:getISOWeek,getISOWeekYear:getISOWeekYear,getISOWeeksInYear:getISOWeeksInYear,getMilliseconds:getMilliseconds,getMinutes:getMinutes,getMonth:getMonth,getOverlappingDaysInIntervals:getOverlappingDaysInIntervals,getQuarter:getQuarter,getSeconds:getSeconds,getTime:getTime,getUnixTime:getUnixTime,getWeek:getWeek,getWeekOfMonth:getWeekOfMonth,getWeekYear:getWeekYear,getWeeksInMonth:getWeeksInMonth,getYear:getYear,hoursToMilliseconds:hoursToMilliseconds,hoursToMinutes:hoursToMinutes,hoursToSeconds:hoursToSeconds,interval:interval,intervalToDuration:intervalToDuration,intlFormat:intlFormat,intlFormatDistance:intlFormatDistance,isAfter:isAfter,isBefore:isBefore,isDate:isDate,isEqual:isEqual,isExists:isExists,isFirstDayOfMonth:isFirstDayOfMonth,isFriday:isFriday,isFuture:isFuture,isLastDayOfMonth:isLastDayOfMonth,isLeapYear:isLeapYear,isMatch:isMatch,isMonday:isMonday,isPast:isPast,isSameDay:isSameDay,isSameHour:isSameHour,isSameISOWeek:isSameISOWeek,isSameISOWeekYear:isSameISOWeekYear,isSameMinute:isSameMinute,isSameMonth:isSameMonth,isSameQuarter:isSameQuarter,isSameSecond:isSameSecond,isSameWeek:isSameWeek,isSameYear:isSameYear,isSaturday:isSaturday,isSunday:isSunday,isThisHour:isThisHour,isThisISOWeek:isThisISOWeek,isThisMinute:isThisMinute,isThisMonth:isThisMonth,isThisQuarter:isThisQuarter,isThisSecond:isThisSecond,isThisWeek:isThisWeek,isThisYear:isThisYear,isThursday:isThursday,isToday:isToday,isTomorrow:isTomorrow,isTuesday:isTuesday,isValid:isValid,isWednesday:isWednesday,isWeekend:isWeekend,isWithinInterval:isWithinInterval,isYesterday:isYesterday,lastDayOfDecade:lastDayOfDecade,lastDayOfISOWeek:lastDayOfISOWeek,lastDayOfISOWeekYear:lastDayOfISOWeekYear,lastDayOfMonth:lastDayOfMonth,lastDayOfQuarter:lastDayOfQuarter,lastDayOfWeek:lastDayOfWeek,lastDayOfYear:lastDayOfYear,lightFormat:lightFormat,lightFormatters:lightFormatters,longFormatters:longFormatters,max:max,milliseconds:milliseconds,millisecondsToHours:millisecondsToHours,millisecondsToMinutes:millisecondsToMinutes,millisecondsToSeconds:millisecondsToSeconds,min:min,minutesToHours:minutesToHours,minutesToMilliseconds:minutesToMilliseconds,minutesToSeconds:minutesToSeconds,monthsToQuarters:monthsToQuarters,monthsToYears:monthsToYears,nextDay:nextDay,nextFriday:nextFriday,nextMonday:nextMonday,nextSaturday:nextSaturday,nextSunday:nextSunday,nextThursday:nextThursday,nextTuesday:nextTuesday,nextWednesday:nextWednesday,parse:parse,parseISO:parseISO,parseJSON:parseJSON,parsers:parsers,previousDay:previousDay,previousFriday:previousFriday,previousMonday:previousMonday,previousSaturday:previousSaturday,previousSunday:previousSunday,previousThursday:previousThursday,previousTuesday:previousTuesday,previousWednesday:previousWednesday,quartersToMonths:quartersToMonths,quartersToYears:quartersToYears,roundToNearestHours:roundToNearestHours,roundToNearestMinutes:roundToNearestMinutes,secondsToHours:secondsToHours,secondsToMilliseconds:secondsToMilliseconds,secondsToMinutes:secondsToMinutes,set:set,setDate:setDate,setDay:setDay,setDayOfYear:setDayOfYear,setDefaultOptions:setDefaultOptions,setHours:setHours,setISODay:setISODay,setISOWeek:setISOWeek,setISOWeekYear:setISOWeekYear,setMilliseconds:setMilliseconds,setMinutes:setMinutes,setMonth:setMonth,setQuarter:setQuarter,setSeconds:setSeconds,setWeek:setWeek,setWeekYear:setWeekYear,setYear:setYear,startOfDay:startOfDay,startOfDecade:startOfDecade,startOfHour:startOfHour,startOfISOWeek:startOfISOWeek,startOfISOWeekYear:startOfISOWeekYear,startOfMinute:startOfMinute,startOfMonth:startOfMonth,startOfQuarter:startOfQuarter,startOfSecond:startOfSecond,startOfToday:startOfToday,startOfTomorrow:startOfTomorrow,startOfWeek:startOfWeek,startOfWeekYear:startOfWeekYear,startOfYear:startOfYear,startOfYesterday:startOfYesterday,sub:sub,subBusinessDays:subBusinessDays,subDays:subDays,subHours:subHours,subISOWeekYears:subISOWeekYears,subMilliseconds:subMilliseconds,subMinutes:subMinutes,subMonths:subMonths,subQuarters:subQuarters,subSeconds:subSeconds,subWeeks:subWeeks,subYears:subYears,toDate:toDate,transpose:transpose,weeksToDays:weeksToDays,yearsToDays:yearsToDays,yearsToMonths:yearsToMonths,yearsToQuarters:yearsToQuarters});